<html>
<head></head>
<style type="text/css">
       SPAN.idxsection { font-family: Arial,Helvetica; font-weight: normal; font-size: 14pt; color: #000000; text-decoration: none }
       SPAN.idxkeyword { font-family: Arial,Helvetica; font-weight: normal; font-size: 10pt; color: #000000; text-decoration: none }
       SPAN.idxkeyword2 { font-family: Arial,Helvetica; font-weight: normal; font-size: 10pt; color: #000000; text-decoration: none }
       SPAN.idxlink { font-family: Arial,Helvetica; font-weight: normal; font-size: 8pt; color: #000000; text-decoration: none }

</style>
<body bgcolor="#FFFFFF">
<font face="Arial,Helvetica" size="4"><b>Keyword Index</b></font><br>
<font face="Arial,Helvetica" size="2">
<a href="javaScript:parent.reDisplay('navContent',0,0);">Table of Contents</a>
</font><br><br>

  <!-- Place holder for the index, do not delete the line below -->
  <script language="JavaScript"><!--
var isDOM=document.getElementById?1:0;
var isIE=document.all?1:0;
var isNS4=navigator.appName=='Netscape'&&!isDOM?1:0;
var isOp=window.opera?1:0;
var isWin=navigator.platform.indexOf('Win')!=-1?1:0;
var isDyn=isDOM||isIE||isNS4;
function getRef(id, par)
{
 par=!par?document:(par.navigator?par.document:par);
 return isIE ? par.all[id] :
  (isDOM ? (par.getElementById?par:par.ownerDocument).getElementById(id) :
  (isNS4 ? par.layers[id] : null));
}
function getSty(id, par)
{
 var r=getRef(id, par);
 return r?(isNS4?r:r.style):null;
}
if (!window.LayerObj) var LayerObj = new Function('id','par',
 'this.ref=getRef(id, par); this.sty=getSty(id, par); return this');
function getLyr(id, par) { return new LayerObj(id, par) }
function LyrFn(fn, fc)
{
 LayerObj.prototype[fn] = new Function('var a=arguments,p=a[0],px=isNS4||isOp?0:"px"; ' +
  'with (this) { '+fc+' }');
}
LyrFn('x','if (!isNaN(p)) sty.left=p+px; else return parseInt(sty.left)');
LyrFn('y','if (!isNaN(p)) sty.top=p+px; else return parseInt(sty.top)');
LyrFn('w','if (p) (isNS4?sty.clip:sty).width=p+px; ' +
 'else return (isNS4?ref.document.width:ref.offsetWidth)');
LyrFn('h','if (p) (isNS4?sty.clip:sty).height=p+px; ' +
 'else return (isNS4?ref.document.height:ref.offsetHeight)');
LyrFn('vis','sty.visibility=p');
LyrFn('write','if (isNS4) with (ref.document){write(p);close()} else ref.innerHTML=p');
LyrFn('alpha','var f=ref.filters,d=(p==null); if (f) {' +
 'if (!d&&sty.filter.indexOf("alpha")==-1) sty.filter+=" alpha(opacity="+p+")"; ' +
 'else if (f.length&&f.alpha) with(f.alpha){if(d)enabled=false;else{opacity=p;enabled=true}} }' +
 'else if (isDOM) sty.MozOpacity=d?"":p+"%"');
var CSSmode=document.compatMode;
CSSmode=(CSSmode&&CSSmode.indexOf('CSS')!=-1)||isDOM&&!isIE||isOp?1:0;
if (!window.page) var page = { win: window, minW: 0, minH: 0, MS: isIE&&!isOp,
 db: CSSmode?'documentElement':'body' }
page.winW=function()
 { with (this) return Math.max(minW, MS?win.document[db].clientWidth:win.innerWidth) }
page.winH=function()
 { with (this) return Math.max(minH, MS?win.document[db].clientHeight:win.innerHeight) }
page.scrollY=function()
 { with (this) return MS?win.document[db].scrollTop:win.pageYOffset }
page.scrollX=function()
 { with (this) return MS?win.document[db].scrollLeft:win.pageXOffset }
function tipTrack(evt, always) { with (this)
{
 evt=evt?evt:window.event;
 sX = page.scrollX();
 sY = page.scrollY();
 mX = isNS4 ? evt.pageX : sX + evt.clientX;
 mY = isNS4 ? evt.pageY : sY + evt.clientY;
}}
function tipPosition(forcePos) { with (this)
{
 if (!actTip) return;
 var wW = page.winW()-(isIE?0:15), wH = page.winH()-(isIE?0:15);
 var t=tips[actTip], tipX=eval(t[0]), tipY=eval(t[1]), tipW=div.w(), tipH=div.h(), adjY = 1;
 if (typeof(t[0])=='number') tipX += mX;
 if (typeof(t[1])=='number') tipY += mY;
 if (tipX + tipW + 5 > sX + wW) { tipX = sX + wW - tipW - 5; adjY = 2 }
 if (tipY + tipH + 5 > sY + wH) tipY = sY + wH - (adjY*tipH) - 5;
 if (tipX < sX+ 5) tipX = sX + 5;
 if (tipY < sY + 5) tipY = sY + 5;
 div.x(tipX);
 div.y(tipY-10);
}}
function tipShow(tipN) { with (this)
{
 if (!isDyn) return;
 if (!div) div = getLyr(myName + 'Layer');
 if (isDOM) div.sty.width = 'auto';
 if (actTip != tipN)
 {
  actTip = tipN;
   if (isNS4) div.ref.captureEvents(Event.MOUSEOVER | Event.MOUSEOUT);
   div.ref.onmouseover = new Function('evt', myName + '.show("' + tipN + '"); ' +
    'if (isNS4) return this.routeEvent(evt)');
   div.ref.onmouseout = new Function('evt', myName + '.hide(); ' +
   'if (isNS4) return this.routeEvent(evt)');
  position(true);
  div.write(template);
 }
 showTip = true;
 fade();
}}
function tipHide() { with (this)
{
 if (!isDyn || !actTip) return;
 if (isNS4 && xPos<=mX && mX<=xPos+div.w() && yPos<=mY && mY<=yPos+div.h()) return;
 clearTimeout(fadeTimer);
 fadeTimer = setTimeout('with (' + myName + ') { showTip=false; fade() }', hideDelay);
}}
function tipFade() { with (this)
{
 clearTimeout(fadeTimer);
 if (showTip)
 {
  div.vis('visible');
 }
 else
 {
  div.vis('hidden');
  actTip = "";
  clearInterval(trackTimer);
 }
}}
function TipObj(myName)
{
 this.myName = myName;
 this.tips = new Array();
 this.template = '';
 this.actTip = '';
 this.showTip = false;
 this.showDelay = 50;
 this.hideDelay = 500;
 this.xPos = this.yPos = this.sX = this.sY = this.mX = this.mY = 0;
 this.track = tipTrack;
 this.position = tipPosition;
 this.show = tipShow;
 this.hide = tipHide;
 this.fade = tipFade;
 this.div = null;
 this.trackTimer = this.fadeTimer = 0;
 this.doFades = false;
}
var kwPopup = new TipObj('kwPopup');
with (kwPopup)
{
 tips.links = new Array(5,0);
 tipStick = 0;
}
if (isNS4) document.captureEvents(Event.MOUSEMOVE);
document.onmousemove = function(evt)
{
 kwPopup.track(evt);
 if (isNS4) return document.routeEvent(evt);
}
var nsWinW = window.innerWidth, nsWinH = window.innerHeight;
function ns4BugCheck()
{
 if (isNS4 && (nsWinW!=innerWidth || nsWinH!=innerHeight)) location.reload()
}
window.onresize = function()
{
 ns4BugCheck();
}
function displayLink(aLink) {
with (kwPopup)
{
 actTip = "";
 hide();
 template = '<table bgcolor="#000000" cellpadding="1" cellspacing="0" border="0">' +
  '<tr><td><table cellpadding="3" cellspacing="1" border="0">' +
  '<tr><td bgcolor="#f0f0f0"><span class="idxlink">Topics Found</span></td></tr>';
 template = template + '<tr><td align="left" bgcolor="#ffffff"><span class="idxlink">' + aLink + '</span></td></tr>';
 template = template + '</table></td></tr></table>';
 show('links');
}
}
//--></script>
<div id="kwPopupLayer" style="position: absolute; z-index: 1000; visibility: hidden; left: 0px; top: 0px; width: 10px">&nbsp;</div>


</body>
</html>

